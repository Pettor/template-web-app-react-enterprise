import{u as e,j as s}from"./iframe-c1YiYtnK.js";import{C as a,T as i}from"./DocumentationLayout-H-tGD38G.js";import{b as n}from"./chunk-WBUKVQRU-cirVA12E.js";import{a as m}from"./chunk-Z7B3SBEZ-Dqeh-pSk.js";import"./preload-helper-PPVm8Dsz.js";import"./chunk-YFAKJTDR-Ci6D3OJR.js";import"./chunk-JGY6VQQQ-BkgGoZtC.js";import"./index-Bw1Ctlrm.js";import"./index-DlMNUfEy.js";import"./useLocalizedStringFormatter-QR4BSf1N.js";import"./chunk-ZQGNWTBN-D-x6fJFC.js";import"./chunk-YFAKJTDR-BBykVR1J.js";import"./proxy-B2oItH5d.js";import"./is-motion-value-CykchRGT.js";import"./chunk-6VC6TS2O-B6Pwy_n_.js";import"./global-config-B5DaTUF1.js";import"./chunk-O24IAYCG-BrpeiVJJ.js";function l(r,t){return{title:r.formatMessage({description:"PwaOfflineDialog- Ready to work offline description",defaultMessage:"Ready to work offline",id:"HQHLM4"}),color:"primary",onClose:t}}const y={title:"Feedback/Progressive Web App",decorators:[a,i]},o={render:()=>{const r=e();return s.jsx(n,{onPress:()=>m(l(r,()=>console.log("onClose"))),children:"Show Toast"})}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  render: () => {
    const intl = useIntl();
    return <Button onPress={() => addToast(PwaOfflineDialogProps(intl, () => console.log("onClose")))}>Show Toast</Button>;
  }
}`,...o.parameters?.docs?.source}}};const M=["OfflineDialog"];export{o as OfflineDialog,M as __namedExportsOrder,y as default};
